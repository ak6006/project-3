//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace project_3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<address> addresses { get; set; }
        public virtual DbSet<addresstype> addresstypes { get; set; }
        public virtual DbSet<barcode> barcodes { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<measurement> measurements { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<order_has_product> order_has_product { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<shift> shifts { get; set; }
        public virtual DbSet<shiftadmin> shiftadmins { get; set; }
        public virtual DbSet<store> stores { get; set; }
        public virtual DbSet<store_has_product> store_has_product { get; set; }
        public virtual DbSet<transvehcile> transvehciles { get; set; }
        public virtual DbSet<transvehcile_has_order> transvehcile_has_order { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<weight> weights { get; set; }
        public virtual DbSet<worker> workers { get; set; }
    
        public virtual ObjectResult<SP_Customer_To_DataGrid_Result> SP_Customer_To_DataGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customer_To_DataGrid_Result>("SP_Customer_To_DataGrid");
        }
    
        public virtual ObjectResult<string> SP_Customer_Add_New(string a_Name, string a_Country, string a_City, string a_State, string a_Phone, string a_Fax, string a_Email, string aDRESS, ObjectParameter new_identity, ObjectParameter rec_found)
        {
            var a_NameParameter = a_Name != null ?
                new ObjectParameter("A_Name", a_Name) :
                new ObjectParameter("A_Name", typeof(string));
    
            var a_CountryParameter = a_Country != null ?
                new ObjectParameter("A_Country", a_Country) :
                new ObjectParameter("A_Country", typeof(string));
    
            var a_CityParameter = a_City != null ?
                new ObjectParameter("A_City", a_City) :
                new ObjectParameter("A_City", typeof(string));
    
            var a_StateParameter = a_State != null ?
                new ObjectParameter("A_State", a_State) :
                new ObjectParameter("A_State", typeof(string));
    
            var a_PhoneParameter = a_Phone != null ?
                new ObjectParameter("A_Phone", a_Phone) :
                new ObjectParameter("A_Phone", typeof(string));
    
            var a_FaxParameter = a_Fax != null ?
                new ObjectParameter("A_Fax", a_Fax) :
                new ObjectParameter("A_Fax", typeof(string));
    
            var a_EmailParameter = a_Email != null ?
                new ObjectParameter("A_Email", a_Email) :
                new ObjectParameter("A_Email", typeof(string));
    
            var aDRESSParameter = aDRESS != null ?
                new ObjectParameter("ADRESS", aDRESS) :
                new ObjectParameter("ADRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Customer_Add_New", a_NameParameter, a_CountryParameter, a_CityParameter, a_StateParameter, a_PhoneParameter, a_FaxParameter, a_EmailParameter, aDRESSParameter, new_identity, rec_found);
        }
    
        public virtual int SP_Customer_Delete(Nullable<int> cUSTOMER_ID, Nullable<int> aDD_ID)
        {
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aDD_IDParameter = aDD_ID.HasValue ?
                new ObjectParameter("ADD_ID", aDD_ID) :
                new ObjectParameter("ADD_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Customer_Delete", cUSTOMER_IDParameter, aDD_IDParameter);
        }
    
        public virtual int SP_Customer_Update(Nullable<int> aDD_ID, string a_Name, string a_Country, string a_City, string a_State, string a_Phone, string a_Fax, string a_Email, string aDRESS, ObjectParameter new_identity, ObjectParameter rec_found)
        {
            var aDD_IDParameter = aDD_ID.HasValue ?
                new ObjectParameter("ADD_ID", aDD_ID) :
                new ObjectParameter("ADD_ID", typeof(int));
    
            var a_NameParameter = a_Name != null ?
                new ObjectParameter("A_Name", a_Name) :
                new ObjectParameter("A_Name", typeof(string));
    
            var a_CountryParameter = a_Country != null ?
                new ObjectParameter("A_Country", a_Country) :
                new ObjectParameter("A_Country", typeof(string));
    
            var a_CityParameter = a_City != null ?
                new ObjectParameter("A_City", a_City) :
                new ObjectParameter("A_City", typeof(string));
    
            var a_StateParameter = a_State != null ?
                new ObjectParameter("A_State", a_State) :
                new ObjectParameter("A_State", typeof(string));
    
            var a_PhoneParameter = a_Phone != null ?
                new ObjectParameter("A_Phone", a_Phone) :
                new ObjectParameter("A_Phone", typeof(string));
    
            var a_FaxParameter = a_Fax != null ?
                new ObjectParameter("A_Fax", a_Fax) :
                new ObjectParameter("A_Fax", typeof(string));
    
            var a_EmailParameter = a_Email != null ?
                new ObjectParameter("A_Email", a_Email) :
                new ObjectParameter("A_Email", typeof(string));
    
            var aDRESSParameter = aDRESS != null ?
                new ObjectParameter("ADRESS", aDRESS) :
                new ObjectParameter("ADRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Customer_Update", aDD_IDParameter, a_NameParameter, a_CountryParameter, a_CityParameter, a_StateParameter, a_PhoneParameter, a_FaxParameter, a_EmailParameter, aDRESSParameter, new_identity, rec_found);
        }
    
        public virtual ObjectResult<SP_Customer_ID_Result> SP_Customer_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customer_ID_Result>("SP_Customer_ID", iDParameter);
        }
    
        public virtual ObjectResult<SP_Customer_Search_Result> SP_Customer_Search(string sEARCH)
        {
            var sEARCHParameter = sEARCH != null ?
                new ObjectParameter("SEARCH", sEARCH) :
                new ObjectParameter("SEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customer_Search_Result>("SP_Customer_Search", sEARCHParameter);
        }
    
        public virtual ObjectResult<SP_Customer_To_ComboBox_Result> SP_Customer_To_ComboBox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Customer_To_ComboBox_Result>("SP_Customer_To_ComboBox");
        }
    
        public virtual ObjectResult<string> SP_Trans_Vin_Add_New(string txtDivername, string txtVinNum, string txtModel, string txtPhone, Nullable<int> txtCustomerId, string txtAddress, string txtSerial, ObjectParameter new_identity, ObjectParameter rec_found)
        {
            var txtDivernameParameter = txtDivername != null ?
                new ObjectParameter("TxtDivername", txtDivername) :
                new ObjectParameter("TxtDivername", typeof(string));
    
            var txtVinNumParameter = txtVinNum != null ?
                new ObjectParameter("TxtVinNum", txtVinNum) :
                new ObjectParameter("TxtVinNum", typeof(string));
    
            var txtModelParameter = txtModel != null ?
                new ObjectParameter("TxtModel", txtModel) :
                new ObjectParameter("TxtModel", typeof(string));
    
            var txtPhoneParameter = txtPhone != null ?
                new ObjectParameter("TxtPhone", txtPhone) :
                new ObjectParameter("TxtPhone", typeof(string));
    
            var txtCustomerIdParameter = txtCustomerId.HasValue ?
                new ObjectParameter("TxtCustomerId", txtCustomerId) :
                new ObjectParameter("TxtCustomerId", typeof(int));
    
            var txtAddressParameter = txtAddress != null ?
                new ObjectParameter("TxtAddress", txtAddress) :
                new ObjectParameter("TxtAddress", typeof(string));
    
            var txtSerialParameter = txtSerial != null ?
                new ObjectParameter("TxtSerial", txtSerial) :
                new ObjectParameter("TxtSerial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Trans_Vin_Add_New", txtDivernameParameter, txtVinNumParameter, txtModelParameter, txtPhoneParameter, txtCustomerIdParameter, txtAddressParameter, txtSerialParameter, new_identity, rec_found);
        }
    
        public virtual int SP_Trans_Vin_DELETE(Nullable<int> vinNo)
        {
            var vinNoParameter = vinNo.HasValue ?
                new ObjectParameter("VinNo", vinNo) :
                new ObjectParameter("VinNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Trans_Vin_DELETE", vinNoParameter);
        }
    
        public virtual ObjectResult<SP_TRANS_VIN_Search_Result> SP_TRANS_VIN_Search(string sEARCH)
        {
            var sEARCHParameter = sEARCH != null ?
                new ObjectParameter("SEARCH", sEARCH) :
                new ObjectParameter("SEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRANS_VIN_Search_Result>("SP_TRANS_VIN_Search", sEARCHParameter);
        }
    
        public virtual ObjectResult<SP_Trans_Vin_To_ComboBox_Result> SP_Trans_Vin_To_ComboBox(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Trans_Vin_To_ComboBox_Result>("SP_Trans_Vin_To_ComboBox", customerIdParameter);
        }
    
        public virtual ObjectResult<SP_Trans_Vin_To_DataGrid_Result> SP_Trans_Vin_To_DataGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Trans_Vin_To_DataGrid_Result>("SP_Trans_Vin_To_DataGrid");
        }
    
        public virtual int SP_Trans_vin_Update(Nullable<int> vinNo, string txtDivername, string txtVinNum, string txtModel, string txtPhone, Nullable<int> txtCustomerId, string txtAddress, string txtSerial, ObjectParameter rec_found)
        {
            var vinNoParameter = vinNo.HasValue ?
                new ObjectParameter("VinNo", vinNo) :
                new ObjectParameter("VinNo", typeof(int));
    
            var txtDivernameParameter = txtDivername != null ?
                new ObjectParameter("TxtDivername", txtDivername) :
                new ObjectParameter("TxtDivername", typeof(string));
    
            var txtVinNumParameter = txtVinNum != null ?
                new ObjectParameter("TxtVinNum", txtVinNum) :
                new ObjectParameter("TxtVinNum", typeof(string));
    
            var txtModelParameter = txtModel != null ?
                new ObjectParameter("TxtModel", txtModel) :
                new ObjectParameter("TxtModel", typeof(string));
    
            var txtPhoneParameter = txtPhone != null ?
                new ObjectParameter("TxtPhone", txtPhone) :
                new ObjectParameter("TxtPhone", typeof(string));
    
            var txtCustomerIdParameter = txtCustomerId.HasValue ?
                new ObjectParameter("TxtCustomerId", txtCustomerId) :
                new ObjectParameter("TxtCustomerId", typeof(int));
    
            var txtAddressParameter = txtAddress != null ?
                new ObjectParameter("TxtAddress", txtAddress) :
                new ObjectParameter("TxtAddress", typeof(string));
    
            var txtSerialParameter = txtSerial != null ?
                new ObjectParameter("TxtSerial", txtSerial) :
                new ObjectParameter("TxtSerial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Trans_vin_Update", vinNoParameter, txtDivernameParameter, txtVinNumParameter, txtModelParameter, txtPhoneParameter, txtCustomerIdParameter, txtAddressParameter, txtSerialParameter, rec_found);
        }
    
        public virtual ObjectResult<SP_Trans_Vin_ID_Result> SP_Trans_Vin_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Trans_Vin_ID_Result>("SP_Trans_Vin_ID", iDParameter);
        }
    }
}
